version: '3.7'

services:

  setup:
    profiles:
      - setup
    build:
      context: elkstack/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./elkstack/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./elkstack/setup/lib.sh:/lib.sh:ro,Z
      - ./elkstack/setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  back:
    image: iadopt/aitwork-back:0.1.9
    container_name: aitwork-back
    ports:
      - "${BACK_PORT}:8080"
    depends_on:
      - mongodb
      - minio
      - elasticsearch
    networks:
      - elk
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-}
      LICENSE_IADOPT: ${LICENSE_IADOPT:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      COHERE_API_KEY: ${COHERE_API_KEY:-}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN:-}
      CLIENT_JWT_SECRET: ${CLIENT_JWT_SECRET:-}
      WEBSITE_JWT_SECRET: ${WEBSITE_JWT_SECRET:-}
      WEBSITE_URL: ${WEBSITE_URL:-}
      MONGODB_URL: ${MONGODB_URL:-}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL:-}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-}
      MINIO_LOCAL_ENDPOINT: ${MINIO_LOCAL_ENDPOINT:-}
      MINIO_LOCAL_PORT: ${MINIO_LOCAL_PORT:-}
      MINIO_SSL_ENDPOINT: ${MINIO_SSL_ENDPOINT:-}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-}
      MINIO_BUCKET: ${MINIO_BUCKET:-}
    volumes:
      - public_back_data:/tmp/uploads
      - public_logs_back:/logs

  front:
    image: iadopt/aitwork-front:0.1.6
    container_name: aitwork-front
    restart: unless-stopped
    depends_on:
      - back
    networks:
      - elk
    ports:
      - "${FRONT_PORT}:3000"

  mongodb:
    image: mongo:6.0
    container_name: public-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - elk
    volumes:
      - public_mongodb_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: public-mongo-express
    restart: unless-stopped
    depends_on:
      - mongodb
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_MONGODB_PORT: ${ME_CONFIG_MONGODB_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    networks:
      - elk

  minio:
    image:  quay.io/minio/minio:latest
    container_name: client-minio
    networks:
      - elk
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-}
      MINIO_SERVER_URL: ${MINIO_SERVER_URL:-}
      TZ: Europe/Paris
    command: server /data --console-address :9001
    volumes:
      - public_minio_data:/data

  elasticsearch:
    container_name: public-elasticsearch
    image: elasticsearch:8.11.3
    volumes:
      - ./elkstack/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - public_elasticsearch_data:/usr/share/elasticsearch/data:Z
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "${ELASTICSEARCH_TCP_PORT}:9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    container_name: public-logstash
    image: logstash:8.11.3
    volumes:
      - ./elkstack/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elkstack/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - public_logs_back:/usr/share/logstash/logs:Z
    ports:
      - "${LOGSTASH_BEATS_PORT}:5044"
      - "${LOGSTASH_TCP_PORT}:50000/tcp"
      - "${LOGSTASH_UDP_PORT}:50000/udp"
      - "${LOGSTASH_MONITORING_PORT}:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-9200}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    container_name: public-kibana
    image: kibana:8.11.3
    volumes:
      - ./elkstack/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "${KIBANA_PORT}:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  nodexporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/host/root"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "${NODE_EXPORTER_PORT}:9100"
    networks:
      - elk
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    ports:
      - "${CADVISOR_PORT}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /dev/kmsg:/dev/kmsg
    networks:
      - elk
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    depends_on:
      - nodexporter
      - cadvisor
    ports:
      - "${PROMETHEUS_PORT}:9090"
    networks:
      - elk
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.3.1
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    networks:
      - elk
    depends_on:
      - prometheus
      - nodexporter
    restart: unless-stopped
    environment:
      PROMETHEUS_PORT: ${PROMETHEUS_PORT:-}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards

  # nginx:
  #   build:
  #     context: nginx/
  #     args:
  #       SUBDOMAIN: ${SUBDOMAIN:-}
  #       DOMAIN: ${DOMAIN:-}
  #       EMAIL: ${EMAIL:-}
  #   container_name: nginx
  #   ports:
  #     - "81:80"
  #     - "444:443"
  #   volumes:
  #     - ./certbot/letsencrypt:/etc/letsencrypt
  #     - ./certbot/certbot-conf:/etc/nginx/certbot-conf
  #   environment:
  #     SUBDOMAIN: ${SUBDOMAIN:-}
  #     DOMAIN: ${DOMAIN:-}
  #     EMAIL: ${EMAIL:-}
  #     BACK_PORT: ${BACK_PORT:-8080}
  #     FRONT_PORT: ${FRONT_PORT:-80}
  #     MONGO_EXPRESS_PORT: ${MONGO_EXPRESS_PORT:-8081}
  #     MINIO_PORT: ${MINIO_PORT:-9000}
  #     MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT:-9001}
  #     KIBANA_PORT: ${KIBANA_PORT:-5601}
  #     GRAFANA_PORT: ${GRAFANA_PORT:-3000}

  # certbot:
  #   build:
  #     context: certbot/
  #     args:
  #       SUBDOMAIN: ${SUBDOMAIN:-"test"}
  #       DOMAIN: ${DOMAIN:-"test.com"}
  #       SSL_EMAIL: ${SSL_EMAIL:-"}
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/letsencrypt:/etc/letsencrypt
  #     - ./certbot/certbot-conf:/etc/nginx/certbot-conf
  #   environment:
  #     SUBDOMAIN: ${SUBDOMAIN:-"test"}
  #     DOMAIN: ${DOMAIN:-"test.com"}
  #     SSL_EMAIL: ${SSL_EMAIL:-"roland@gpt.com"}
  #   depends_on:
  #     - nginx

networks:
  elk:
    driver: bridge

volumes:
  public_back_data:
  public_logs_back:
  public_elasticsearch_data:
  public_minio_data:
  public_mongodb_data: